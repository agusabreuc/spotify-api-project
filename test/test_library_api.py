# coding: utf-8

"""
    Spotify Web API

    You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers.   # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.library_api import LibraryApi  # noqa: E501
from swagger_client.rest import ApiException


class TestLibraryApi(unittest.TestCase):
    """LibraryApi unit test stubs"""

    def setUp(self):
        self.api = LibraryApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_change_playlist_details(self):
        """Test case for change_playlist_details

        Change Playlist Details   # noqa: E501
        """
        pass

    def test_check_current_user_follows(self):
        """Test case for check_current_user_follows

        Check If User Follows Artists or Users   # noqa: E501
        """
        pass

    def test_check_users_saved_albums(self):
        """Test case for check_users_saved_albums

        Check User's Saved Albums   # noqa: E501
        """
        pass

    def test_check_users_saved_audiobooks(self):
        """Test case for check_users_saved_audiobooks

        Check User's Saved Audiobooks   # noqa: E501
        """
        pass

    def test_check_users_saved_episodes(self):
        """Test case for check_users_saved_episodes

        Check User's Saved Episodes   # noqa: E501
        """
        pass

    def test_check_users_saved_shows(self):
        """Test case for check_users_saved_shows

        Check User's Saved Shows   # noqa: E501
        """
        pass

    def test_check_users_saved_tracks(self):
        """Test case for check_users_saved_tracks

        Check User's Saved Tracks   # noqa: E501
        """
        pass

    def test_create_playlist(self):
        """Test case for create_playlist

        Create Playlist   # noqa: E501
        """
        pass

    def test_follow_artists_users(self):
        """Test case for follow_artists_users

        Follow Artists or Users   # noqa: E501
        """
        pass

    def test_get_a_list_of_current_users_playlists(self):
        """Test case for get_a_list_of_current_users_playlists

        Get Current User's Playlists   # noqa: E501
        """
        pass

    def test_get_followed(self):
        """Test case for get_followed

        Get Followed Artists   # noqa: E501
        """
        pass

    def test_get_users_saved_albums(self):
        """Test case for get_users_saved_albums

        Get User's Saved Albums   # noqa: E501
        """
        pass

    def test_get_users_saved_audiobooks(self):
        """Test case for get_users_saved_audiobooks

        Get User's Saved Audiobooks   # noqa: E501
        """
        pass

    def test_get_users_saved_episodes(self):
        """Test case for get_users_saved_episodes

        Get User's Saved Episodes   # noqa: E501
        """
        pass

    def test_get_users_saved_shows(self):
        """Test case for get_users_saved_shows

        Get User's Saved Shows   # noqa: E501
        """
        pass

    def test_get_users_saved_tracks(self):
        """Test case for get_users_saved_tracks

        Get User's Saved Tracks   # noqa: E501
        """
        pass

    def test_get_users_top_artists_and_tracks(self):
        """Test case for get_users_top_artists_and_tracks

        Get User's Top Items   # noqa: E501
        """
        pass

    def test_remove_albums_user(self):
        """Test case for remove_albums_user

        Remove Users' Saved Albums   # noqa: E501
        """
        pass

    def test_remove_audiobooks_user(self):
        """Test case for remove_audiobooks_user

        Remove User's Saved Audiobooks   # noqa: E501
        """
        pass

    def test_remove_episodes_user(self):
        """Test case for remove_episodes_user

        Remove User's Saved Episodes   # noqa: E501
        """
        pass

    def test_remove_shows_user(self):
        """Test case for remove_shows_user

        Remove User's Saved Shows   # noqa: E501
        """
        pass

    def test_remove_tracks_user(self):
        """Test case for remove_tracks_user

        Remove User's Saved Tracks   # noqa: E501
        """
        pass

    def test_save_albums_user(self):
        """Test case for save_albums_user

        Save Albums for Current User   # noqa: E501
        """
        pass

    def test_save_audiobooks_user(self):
        """Test case for save_audiobooks_user

        Save Audiobooks for Current User   # noqa: E501
        """
        pass

    def test_save_episodes_user(self):
        """Test case for save_episodes_user

        Save Episodes for Current User   # noqa: E501
        """
        pass

    def test_save_shows_user(self):
        """Test case for save_shows_user

        Save Shows for Current User   # noqa: E501
        """
        pass

    def test_save_tracks_user(self):
        """Test case for save_tracks_user

        Save Tracks for Current User   # noqa: E501
        """
        pass

    def test_unfollow_artists_users(self):
        """Test case for unfollow_artists_users

        Unfollow Artists or Users   # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
