# coding: utf-8

"""
    Spotify Web API

    You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers.   # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.playlists_api import PlaylistsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestPlaylistsApi(unittest.TestCase):
    """PlaylistsApi unit test stubs"""

    def setUp(self):
        self.api = PlaylistsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_tracks_to_playlist(self):
        """Test case for add_tracks_to_playlist

        Add Items to Playlist   # noqa: E501
        """
        pass

    def test_change_playlist_details(self):
        """Test case for change_playlist_details

        Change Playlist Details   # noqa: E501
        """
        pass

    def test_check_if_user_follows_playlist(self):
        """Test case for check_if_user_follows_playlist

        Check if Users Follow Playlist   # noqa: E501
        """
        pass

    def test_create_playlist(self):
        """Test case for create_playlist

        Create Playlist   # noqa: E501
        """
        pass

    def test_follow_playlist(self):
        """Test case for follow_playlist

        Follow Playlist   # noqa: E501
        """
        pass

    def test_get_a_categories_playlists(self):
        """Test case for get_a_categories_playlists

        Get Category's Playlists   # noqa: E501
        """
        pass

    def test_get_a_list_of_current_users_playlists(self):
        """Test case for get_a_list_of_current_users_playlists

        Get Current User's Playlists   # noqa: E501
        """
        pass

    def test_get_featured_playlists(self):
        """Test case for get_featured_playlists

        Get Featured Playlists   # noqa: E501
        """
        pass

    def test_get_list_users_playlists(self):
        """Test case for get_list_users_playlists

        Get User's Playlists   # noqa: E501
        """
        pass

    def test_get_playlist(self):
        """Test case for get_playlist

        Get Playlist   # noqa: E501
        """
        pass

    def test_get_playlist_cover(self):
        """Test case for get_playlist_cover

        Get Playlist Cover Image   # noqa: E501
        """
        pass

    def test_get_playlists_tracks(self):
        """Test case for get_playlists_tracks

        Get Playlist Items   # noqa: E501
        """
        pass

    def test_remove_tracks_playlist(self):
        """Test case for remove_tracks_playlist

        Remove Playlist Items   # noqa: E501
        """
        pass

    def test_reorder_or_replace_playlists_tracks(self):
        """Test case for reorder_or_replace_playlists_tracks

        Update Playlist Items   # noqa: E501
        """
        pass

    def test_unfollow_playlist(self):
        """Test case for unfollow_playlist

        Unfollow Playlist   # noqa: E501
        """
        pass

    def test_upload_custom_playlist_cover(self):
        """Test case for upload_custom_playlist_cover

        Add Custom Playlist Cover Image   # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
