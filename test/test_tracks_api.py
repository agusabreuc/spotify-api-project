# coding: utf-8

"""
    Spotify Web API

    You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers.   # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.tracks_api import TracksApi  # noqa: E501
from swagger_client.rest import ApiException


class TestTracksApi(unittest.TestCase):
    """TracksApi unit test stubs"""

    def setUp(self):
        self.api = TracksApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_tracks_to_playlist(self):
        """Test case for add_tracks_to_playlist

        Add Items to Playlist   # noqa: E501
        """
        pass

    def test_check_users_saved_tracks(self):
        """Test case for check_users_saved_tracks

        Check User's Saved Tracks   # noqa: E501
        """
        pass

    def test_get_an_albums_tracks(self):
        """Test case for get_an_albums_tracks

        Get Album Tracks   # noqa: E501
        """
        pass

    def test_get_an_artists_top_tracks(self):
        """Test case for get_an_artists_top_tracks

        Get Artist's Top Tracks   # noqa: E501
        """
        pass

    def test_get_audio_analysis(self):
        """Test case for get_audio_analysis

        Get Track's Audio Analysis   # noqa: E501
        """
        pass

    def test_get_audio_features(self):
        """Test case for get_audio_features

        Get Track's Audio Features   # noqa: E501
        """
        pass

    def test_get_playlists_tracks(self):
        """Test case for get_playlists_tracks

        Get Playlist Items   # noqa: E501
        """
        pass

    def test_get_recommendations(self):
        """Test case for get_recommendations

        Get Recommendations   # noqa: E501
        """
        pass

    def test_get_several_audio_features(self):
        """Test case for get_several_audio_features

        Get Tracks' Audio Features   # noqa: E501
        """
        pass

    def test_get_several_tracks(self):
        """Test case for get_several_tracks

        Get Several Tracks   # noqa: E501
        """
        pass

    def test_get_track(self):
        """Test case for get_track

        Get Track   # noqa: E501
        """
        pass

    def test_get_users_saved_tracks(self):
        """Test case for get_users_saved_tracks

        Get User's Saved Tracks   # noqa: E501
        """
        pass

    def test_get_users_top_artists_and_tracks(self):
        """Test case for get_users_top_artists_and_tracks

        Get User's Top Items   # noqa: E501
        """
        pass

    def test_remove_tracks_playlist(self):
        """Test case for remove_tracks_playlist

        Remove Playlist Items   # noqa: E501
        """
        pass

    def test_remove_tracks_user(self):
        """Test case for remove_tracks_user

        Remove User's Saved Tracks   # noqa: E501
        """
        pass

    def test_reorder_or_replace_playlists_tracks(self):
        """Test case for reorder_or_replace_playlists_tracks

        Update Playlist Items   # noqa: E501
        """
        pass

    def test_save_tracks_user(self):
        """Test case for save_tracks_user

        Save Tracks for Current User   # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
